# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COVERAGE_DIR: _site
      MAIN_DIR: NeuralTSNE
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install flake8 pytest pytest-cov pytest-html
      - name: Extract tag version
        id: tag
        run: |
          echo ::set-output name=TAG_VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Update version
        run: |
          sed -i "s/{{VERSION}}/${{ steps.tag.outputs.TAG_VERSION }}/g" $MAIN_DIR/__init__.py
      - name: Build package
        run: |
          pip install -e NeuralTSNE/.
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          mkdir -p $COVERAGE_DIR/html_report
          pytest -c $MAIN_DIR/pyproject.toml --cov=$MAIN_DIR --cov-report=json:$COVERAGE_DIR/coverage.json --cov-report=html:$COVERAGE_DIR/coverage --html=$COVERAGE_DIR/html_report/report.html
      - name: Create main index file
        run: |
          echo "<html><head><title>NeuralTSNE</title></head><body><h1>NeuralTSNE</h1><p>Test report: <a href=\"html_report/report.html\">report.html</a></p><p>Coverage report: <a href=\"coverage/index.html\">index.html</a></p><p>Coverage json: <a href=\"coverage.json\">coverage.json</a></p></body></html>" > $COVERAGE_DIR/index.html
      - name: Fix permissions in coverage directory
        run: |
          chmod -c -R +rX "$COVERAGE_DIR/"
      - name: Upload Github Pages artifact
        uses: actions/upload-pages-artifact@v3
  deploy:
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v4
  publish:
    needs: build
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
